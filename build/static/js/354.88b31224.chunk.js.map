{"version":3,"file":"static/js/354.88b31224.chunk.js","mappings":"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","sources":["components/Calculate/Calculators/properties/MetalProperty.js","components/UI/DynamicTextArea/DynamicTextArea.js","components/imageWorker/image2.js","components/Calculate/Calculators/CalculatorParent.js","components/Calculate/Calculators/PipeCalculator.js","components/Calculate/Calculators/BalkCalculator.js","components/Calculate/Calculators/SheetCalculator.js","components/Calculate/CalculatorList.js","components/PopUpMenu.js"],"sourcesContent":["const metals = [\r\n    {\r\n            label: \"Сталь\",\r\n            value: 7.85\r\n    },\r\n    {\r\n            label: \"Алюминий\",\r\n            value: 2.73\r\n    },\r\n    {\r\n            label: \"Латунь\",\r\n            value: 8.55\r\n    },\r\n    {\r\n            label: \"Медь\",\r\n            value: 8.93\r\n    },\r\n    {\r\n            label: \"Бронза\",\r\n            value: 8.88\r\n    },\r\n    {\r\n            label: \"Цинк\",\r\n            value: 7.92\r\n    },\r\n    {\r\n            label: \"Хром\",\r\n            value: 7.1\r\n    },\r\n    {\r\n            label: \"Свинец\",\r\n            value: 11.37\r\n    },\r\n    {\r\n            label: \"Чугун\",\r\n            value: 7.86\r\n    },\r\n    {\r\n            label: \"Золото\",\r\n            value: 19.36\r\n    },\r\n    {\r\n            label: \"Магний\",\r\n            value: 1.7\r\n    },\r\n    {\r\n            label: \"Никель\",\r\n            value: 8.85\r\n    },\r\n    {\r\n            label: \"Титан\",\r\n            value: 4.5\r\n    },\r\n    {\r\n            label: \"Олово\",\r\n            value: 7.26\r\n    },\r\n    {\r\n            label: \"Тефлон\",\r\n            value: 2.2\r\n    },\r\n    {\r\n            label: \"Серебро\",\r\n            value: 10.5\r\n    },\r\n    {\r\n            label: \"Платина\",\r\n            value: 21.45\r\n    },\r\n    {\r\n            label: \"Нержавейка 304/310\",\r\n            value: 7.92\r\n    },\r\n    {\r\n            label: \"Нержавейка 316/321\",\r\n            value: 7.94\r\n    },\r\n    {\r\n            label: \"Нержавейка 410/430\",\r\n            value: 7.71\r\n    },\r\n    {\r\n            label: \"Цирконий\",\r\n            value: 6.51\r\n    },\r\n    {\r\n            label: \"Молибден\",\r\n            value: 10.28\r\n    }\r\n]\r\n\r\nexport default metals","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Input } from 'antd';\r\n\r\nconst DynamicTextArea = () => {\r\n  const [value, setValue] = useState('');\r\n  const textAreaRef = useRef(null);\r\n\r\n  // Optional: Focus on mount\r\n  useEffect(() => {\r\n    if (textAreaRef.current) {\r\n      textAreaRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Input.TextArea\r\n      ref={textAreaRef}\r\n      value={value}\r\n      onChange={(e) => setValue(e.target.value)}\r\n      autoSize={{\r\n        minRows: 2,\r\n        maxRows: 8\r\n      }}\r\n      placeholder=\"Type something...\"\r\n      style={{ resize: 'none' }} // Disable manual resize\r\n    />\r\n  );\r\n};\r\n\r\nexport default DynamicTextArea;","import React, { useState } from 'react';\r\nimport { LoadingOutlined, PlusOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Flex, message, Upload, Image, Card, Button } from 'antd';\r\n\r\nconst getBase64 = (img, callback) => {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n};\r\n\r\nconst beforeUpload = (file) => {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n};\r\n\r\nconst App = ({ initialPhotos = [], onPhotosChange = () => {} }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [photos, setPhotos] = useState(initialPhotos);\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === 'uploading') {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      getBase64(info.file.originFileObj, (url) => {\r\n        setLoading(false);\r\n        const newPhoto = {\r\n          uid: info.file.uid,\r\n          url,\r\n          name: info.file.name,\r\n          status: 'done',\r\n        };\r\n        const newPhotos = [...photos, newPhoto];\r\n        setPhotos(newPhotos);\r\n        onPhotosChange(newPhotos);\r\n      });\r\n    }\r\n    if (info.file.status === 'error') {\r\n      setLoading(false);\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  };\r\n\r\n  const handleRemove = (uid) => {\r\n    const newPhotos = photos.filter((photo) => photo.uid !== uid);\r\n    setPhotos(newPhotos);\r\n    onPhotosChange(newPhotos);\r\n  };\r\n\r\n  const uploadButton = (\r\n    <button style={{ border: 0, background: 'none' }} type=\"button\">\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <Flex vertical gap=\"middle\">\r\n      <Upload\r\n        name=\"avatar\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={false}\r\n        action=\"https://karadon.ru:8553/api/photo/upload\"\r\n        beforeUpload={beforeUpload}\r\n        onChange={handleChange}\r\n      >\r\n        {uploadButton}\r\n      </Upload>\r\n\r\n      <Flex gap=\"small\" wrap=\"wrap\">\r\n        {photos.map((photo) => (\r\n          <Card\r\n            key={photo.uid}\r\n            hoverable\r\n            style={{ width: 100, position: 'relative' }}\r\n            bodyStyle={{ padding: 0 }}\r\n            cover={\r\n              <Image\r\n                src={photo.url}\r\n                alt={photo.name}\r\n                style={{ width: '100%', height: 100, objectFit: 'cover' }}\r\n                preview={false}\r\n              />\r\n            }\r\n          >\r\n            <Button\r\n              type=\"text\"\r\n              danger\r\n              icon={<DeleteOutlined />}\r\n              style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                right: 0,\r\n                zIndex: 1,\r\n              }}\r\n              onClick={() => handleRemove(photo.uid)}\r\n            />\r\n          </Card>\r\n        ))}\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport metals from \"./properties/MetalProperty\"\r\nimport Select from 'react-select';\r\nimport DynamicTextArea from '../../UI/DynamicTextArea/DynamicTextArea';\r\nimport App from '../../imageWorker/image2';\r\nimport \"./CalculatorStyle.modul.css\"\r\n\r\n\r\nclass CalculatorParent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.metals = metals\r\n        this.pi = 3.1415926;\r\n\r\n        this.lengthUnionsBig = [{title: \"М\", scale: 1}, {title: \"Км\", scale: 1000}, {title: \"См\", scale: 0.01}];\r\n        this.weightUnions = [{title: \"Кг\", scale: 1}, {title: \"Т\", scale: 0.001}];\r\n        this.priceUnions = [{title: \"за 1 Кг\", scale: 1}, {title: \"за 1 Т\", scale: 0.001}];\r\n        this.lengthUnions = [{title: \"Мм\", scale: 1}, {title: \"См\", scale: 100}];\r\n\r\n        const null_function = (null_arg) => {};\r\n        this.setValues = this.props.setValues || null_function;\r\n\r\n        this.inputGroup = this.inputGroup.bind(this);\r\n        this.hiddenMenu = this.hiddenMenu.bind(this);\r\n        this.changeNds = this.changeNds.bind(this);\r\n        this.PriceNdsBlock = this.PriceNdsBlock.bind(this);\r\n        this.priceBlock = this.priceBlock.bind(this);\r\n        this.selectUnions = this.selectUnions.bind(this);\r\n        this.OutputLineWithUnions = this.OutputLineWithUnions.bind(this);\r\n        this.OutputLinesWithUnions = this.OutputLinesWithUnions.bind(this);\r\n        this.MainResult = this.MainResult.bind(this);\r\n        this.ResultLength = this.ResultLength.bind(this);\r\n        this.ResultMass = this.ResultMass.bind(this);\r\n        this.InputsGroups = this.InputsGroups.bind(this);\r\n        this.CalculatorOption = this.CalculatorOption.bind(this);\r\n        this.CalculatorHead = this.CalculatorHead.bind(this);\r\n        this.MassAndLengthInput = this.MassAndLengthInput.bind(this);\r\n        this.QuontityAndPrice = this.QuontityAndPrice.bind(this);\r\n        this.updateCalculator = this.updateCalculator.bind(this);\r\n        this.AdditionalInputs = this.AdditionalInputs.bind(this);\r\n        this.handlesImages = this.handlesImages.bind(this);\r\n    }\r\n\r\n    updateCalculator()\r\n    {\r\n        this.setState({\r\n            length_InputValue: 0,\r\n            length_InputOption: 1,\r\n            massa_InputValue: 0,\r\n            massa_InputOption: 1,\r\n        }, this.UpdateInput)\r\n        \r\n    }\r\n\r\n    selectUnions(props)\r\n    {\r\n        var unions = props.unions;\r\n        var change = props.change;\r\n        var default_value = props.default_value;\r\n        return (\r\n            <select className='selectUnions'\r\n                value={default_value}\r\n                onChange={change}\r\n            >\r\n                {\r\n                    unions.map((union, i) => {\r\n                        return <option value={union.scale} key={i}>{union.title}</option>\r\n                    })\r\n                }\r\n            </select>\r\n        )\r\n    }\r\n\r\n    inputGroup(props)\r\n    {\r\n        var title = props.title;\r\n        var placeholder = props.placeholder;\r\n        var unions = props.unions;\r\n        var changeInput = props.changeInput;\r\n        var changeOption = props.changeOption;\r\n        var default_value = props.default_value || \"\";\r\n        var default_option = props.default_option;\r\n        return (\r\n            <div className='CalculatorParameter'>\r\n                <p>{title}</p>\r\n                <div className='inputOptionWrapper'>\r\n                    <input type=\"number\" \r\n                           placeholder={placeholder}\r\n                           defaultValue={default_value}\r\n                           onChange={changeInput}\r\n                    ></input>\r\n                    {\r\n                        unions.length !== 0 &&\r\n                        <this.selectUnions change={changeOption} \r\n                                           default_value={default_option} \r\n                                           unions={unions}\r\n                        ></this.selectUnions>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    Output(props) {\r\n        return <div className='output'>{props.value}</div>\r\n    }\r\n    priceBlock(props) {\r\n        var price = props.price || 0\r\n        return (\r\n            <div className='CalculatorParameter'>\r\n                <p>Общая стоимость (руб): </p>\r\n                <this.Output value={parseFloat(price.toFixed(2))}></this.Output>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n    hiddenMenu() {\r\n        if (this.state.needsHiddenMenu)\r\n        return (\r\n            <div>\r\n                <div className='menu_opener'\r\n                     onClick={() => {this.setState({isOpenMenu: !this.state.isOpenMenu})}}\r\n                >\r\n                    <i className={!this.state.isOpenMenu ? \"fa-solid fa-chevron-down\" : \"fa-solid fa-chevron-up\"}></i>\r\n                </div>\r\n                <div className='Calculator' style={{display: !this.state.isOpenMenu ? \"none\" : \"block\", marginBottom: \"10px\"}}>\r\n                    <div className='CalculatorParameters'>\r\n                        <div className='CalculatorParameter'>\r\n                            <p>Материал</p>\r\n                            <Select \r\n                                options={metals}\r\n                                defaultValue={this.state.density_option}\r\n                                onChange={(option) => \r\n                                    {this.setState({\r\n                                        density: option.value,\r\n                                        material: option.label,\r\n                                        density_option: option\r\n                                    }, this.UpdateInput)}}\r\n                            ></Select>\r\n                            \r\n                        </div>\r\n                        <div className='CalculatorParameter'>\r\n                            <p>Плотность (Гр/См³): </p>\r\n                            <this.Output value={this.state.density} onChange={()=>{}}></this.Output>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    changeNds(bool) {\r\n        this.setState({isNDS: bool}, this.UpdateInput)\r\n    }\r\n    PriceNdsBlock() {\r\n        var isNDS = this.state.isNDS;\r\n        return (\r\n            <div className='nds-choosing'>\r\n                <div \r\n                    className={!isNDS ? \"active\" : \"\"}\r\n                    onClick={()=>this.changeNds(false)}\r\n                >Без НДС</div>\r\n                <div \r\n                    className={isNDS ? \"active\" : \"\"}\r\n                    onClick={()=>this.changeNds(true)}\r\n                >С НДС</div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    OutputLineWithUnions(props){\r\n        var title = props.title || \"\";\r\n        var value = props.value || 0;\r\n        var signs = props.signs || 32;\r\n        var unions = props.unions;\r\n        var default_option = props.default_option;\r\n        var onChangeUnions = props.onChangeUnions;\r\n\r\n        return (\r\n            <div className='CalculatorParameter'>\r\n                <p>{title}: </p>\r\n                <div className='inputOptionWrapper'>\r\n                    <this.Output value={parseFloat(value.toFixed(signs))}></this.Output>\r\n                    {\r\n                        unions && unions.length > 0 &&\r\n                        <this.selectUnions change={(event) => {onChangeUnions(event.target.value)}}\r\n                                       unions={unions}\r\n                                       default_value={ default_option }\r\n                        ></this.selectUnions>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    OutputLinesWithUnions(props){\r\n        var lines = props.lines;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    lines.map((line, i) => {\r\n                        return <this.OutputLineWithUnions\r\n                                key={i}\r\n                                title = { line.title }\r\n                                value = { line.value } \r\n                                signs = { line.signs }\r\n                                unions = { line.unions }\r\n                                default_option = { line.default_option }\r\n                                onChangeUnions = { line.onChangeUnions }\r\n                                ></this.OutputLineWithUnions>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    ResultMass() {\r\n        var weightUnions = [{title: \"Кг\", scale: 1}, {title: \"Т\", scale: 0.001}];\r\n        return (\r\n            <this.OutputLinesWithUnions\r\n                lines={[\r\n                    {\r\n                        title: \"Масса (одной единицы)\",\r\n                        value: this.state.massaOneScaled,\r\n                        signs: 6,\r\n                        unions: weightUnions,\r\n                        default_option: this.state.massaOneOutputScale,\r\n                        onChangeUnions: (value) => {this.setState({massaOneOutputScale: value}, this.UpdateInput)}\r\n                    },\r\n                    {\r\n                        title: \"Общая масса\",\r\n                        value: this.state.massaScaled,\r\n                        signs: 6,\r\n                        unions: weightUnions,\r\n                        default_option: this.state.massaOutputScale,\r\n                        onChangeUnions: (value) => {this.setState({massaOutputScale: value}, this.UpdateInput)}\r\n                    }\r\n                ]}\r\n            ></this.OutputLinesWithUnions>\r\n        )\r\n    }\r\n    ResultLength() {\r\n        var lengthUnionsBig = [{title: \"М\", scale: 1}, {title: \"Км\", scale: 1000}, {title: \"См\", scale: 0.01}];\r\n        return (\r\n            <this.OutputLinesWithUnions\r\n                lines={[\r\n                    {\r\n                        title: \"Средняя длина (одной единицы)\",\r\n                        value: this.state.l_average_Scaled,\r\n                        signs: 6,\r\n                        unions: lengthUnionsBig,\r\n                        default_option: this.state.l_average_OutputScale,\r\n                        onChangeUnions: (value) => {this.setState({l_average_OutputScale: value}, this.UpdateInput)}\r\n                    },\r\n                    {\r\n                        title: \"Длина\",\r\n                        value: this.state.l_Scaled,\r\n                        signs: 6,\r\n                        unions: lengthUnionsBig,\r\n                        default_option: this.state.l_OutputScale,\r\n                        onChangeUnions: (value) => {this.setState({l_OutputScale: value}, this.UpdateInput)}\r\n                    }\r\n                ]}\r\n            ></this.OutputLinesWithUnions>\r\n        )\r\n    }\r\n    MainResult() {\r\n        return (\r\n            <div className='Calculator'>\r\n                <h2>Результат:</h2>\r\n                { this.state.calculator_option===0 && (\r\n                    <this.ResultMass></this.ResultMass>\r\n                )}{ this.state.calculator_option===1 && (\r\n                    <this.ResultLength></this.ResultLength>\r\n                )}\r\n                <this.priceBlock price={this.state.price}></this.priceBlock>\r\n            </div>\r\n        )\r\n    }\r\n    CalculatorOption(props)\r\n    {\r\n        var number = props.number;\r\n        var text = props.text;\r\n        var update = props.update\r\n        var isActive = this.state.calculator_option === number ? \"active\" : \"\";\r\n        var onClick = () => {\r\n            if (this.state.calculator_option !== number) {\r\n                this.setState({calculator_option: number});\r\n                update()\r\n            }}\r\n        return <div className={'CalculatorOption ' + isActive} onClick={onClick}>\r\n                    {text}\r\n                </div>\r\n    }\r\n    CalculatorHead() {\r\n        var img = this.img;\r\n        var alt = this.alt;\r\n        return (\r\n            <div className='CalculatorHead'>\r\n                <img className='CalculatorHeadImg' src={img} alt={alt}></img>\r\n                <div className='CalculatorOptions'>\r\n                    <this.CalculatorOption text=\"По длине\" number={0} update={this.updateCalculator}></this.CalculatorOption>\r\n                    <this.CalculatorOption text=\"По массе\" number={1} update={this.updateCalculator}></this.CalculatorOption>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    InputsGroups(props){\r\n        var inputs = props.inputs;\r\n        return (\r\n            <div>\r\n                {\r\n                    inputs.map((input, i) => {\r\n                        return <this.inputGroup\r\n                            key={i}\r\n                            title={input.title}\r\n                            placeholder={input.placeholder}\r\n                            changeInput={input.changeInput}\r\n                            changeOption={input.changeOption}\r\n                            unions={input.unions}\r\n                            default_value={input.default_value}\r\n                            default_option={input.default_option}\r\n                        ></this.inputGroup>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    MassAndLengthInput()\r\n    {\r\n        return ( \r\n            <div>\r\n                { this.state.calculator_option===0 && (\r\n                    <this.inputGroup title=\"Длина\"\r\n                        placeholder='Введите длину'\r\n                        changeInput={(event) => {this.setState({length_InputValue: event.target.value}, this.UpdateInput)}}\r\n                        changeOption={(event) => {this.setState({length_InputOption: event.target.value}, this.UpdateInput)}}\r\n                        unions={this.lengthUnionsBig}\r\n                        default_value = {this.state.length_InputValue}\r\n                        default_option = {this.state.length_InputOption}\r\n                    ></this.inputGroup>\r\n                )}\r\n                { this.state.calculator_option===1 && (\r\n                    <this.inputGroup title=\"Масса\" \r\n                        placeholder='Введите массу'\r\n                        changeInput={(event) => {this.setState({massa_InputValue: event.target.value}, this.UpdateInput)}}\r\n                        changeOption={(event) => {this.setState({massa_InputOption: event.target.value}, this.UpdateInput)}}\r\n                        unions={this.weightUnions}\r\n                        default_value = {this.state.massa_InputValue}\r\n                        default_option = {this.state.massa_InputOption}\r\n                    ></this.inputGroup>\r\n\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n    QuontityAndPrice()\r\n    {\r\n        return (\r\n            <div>\r\n                <this.inputGroup title=\"Количество (шт)\" \r\n                    placeholder='Введите количество'\r\n                    changeInput={(event) => {this.setState({quontity_InputValue: event.target.value}, this.UpdateInput)}}\r\n                    default_value={this.state.quontity_InputValue}\r\n                    unions={[]}\r\n                ></this.inputGroup>\r\n                <this.inputGroup title=\"Цена (руб)\" \r\n                    placeholder='Введите цену'\r\n                    changeInput={(event) => {this.setState({price_InputValue: event.target.value}, this.UpdateInput)}}\r\n                    changeOption={(event) => {this.setState({price_InputOption: event.target.value}, this.UpdateInput)}}\r\n                    unions={this.priceUnions}\r\n                    default_value={this.state.price_InputValue}\r\n                    default_option={this.state.price_InputOption}\r\n                ></this.inputGroup>\r\n            </div>\r\n        )\r\n    }\r\n    handlesImages(images)\r\n    {\r\n        this.setState(\r\n            {images: images},\r\n            () => {this.setValues(this.state)}\r\n        )\r\n    }\r\n    AdditionalInputs()\r\n    {\r\n        if (this.props.additional_inputs)\r\n        return (\r\n            <div className='AdditionalInputs'>\r\n                 <p>Комментарий</p>\r\n                 <DynamicTextArea></DynamicTextArea>\r\n                 <p>Прикрепить фотографии</p>\r\n                <App \r\n                    initialPhotos={this.state.images}\r\n                    onPhotosChange={this.handlesImages}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <div className='Calculator'>\r\n                    <this.CalculatorHead></this.CalculatorHead>\r\n                    <div className='CalculatorParameters'>\r\n                        <this.MainInputs></this.MainInputs>\r\n                        <this.MassAndLengthInput></this.MassAndLengthInput>\r\n                        <this.QuontityAndPrice></this.QuontityAndPrice>\r\n                        <this.PriceNdsBlock></this.PriceNdsBlock>\r\n                    </div>\r\n                </div>\r\n                <this.hiddenMenu></this.hiddenMenu>\r\n                <this.AdditionalInputs></this.AdditionalInputs>\r\n                <this.MainResult></this.MainResult>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CalculatorParent;","import pipe_calculator_img from '../../../img/calculators/pipe.png'\r\nimport CalculatorParent from './CalculatorParent';\r\n\r\n\r\n\r\nclass PipeCalculator extends CalculatorParent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.img = pipe_calculator_img;\r\n        this.alt = 'Pipe Calculator';\r\n\r\n        this.state = {\r\n            ...props.values\r\n        }\r\n        this.UpdateInput = this.UpdateInput.bind(this);\r\n        this.MainInputs = this.MainInputs.bind(this);\r\n\r\n        this.inputs = [\r\n            {\r\n                title: \"Диаметр (D)\",\r\n                placeholder: 'Введите диаметр',\r\n                changeInput: (event) => {this.setState({D_Input: event.target.value}, this.UpdateInput)},\r\n                changeOption: (event) => {this.setState({D_Scale: event.target.value}, this.UpdateInput)},\r\n                unions: this.lengthUnions,\r\n                default_value: this.state.D_Input,\r\n                default_option: this.state.D_Scale\r\n            },\r\n            {\r\n                title: \"Толщина (T)\" ,\r\n                placeholder: 'Введите толщину',\r\n                changeInput: (event) => {this.setState({T_Input: event.target.value}, this.UpdateInput)},\r\n                changeOption: (event) => {this.setState({T_Scale: event.target.value}, this.UpdateInput)},\r\n                unions: this.lengthUnions,\r\n                default_value: this.state.T_Input,\r\n                default_option: this.state.T_Scale\r\n            },\r\n        ]\r\n        \r\n    };\r\n    UpdateInput() {\r\n        var D = this.state.D_Input * this.state.D_Scale;\r\n        var T = this.state.T_Input * this.state.T_Option;\r\n\r\n        this.R = D / 2;\r\n        this.r = this.R - T;\r\n        \r\n\r\n        if (this.state.calculator_option === 0){\r\n            // По длине\r\n            this.l = this.state.length_InputValue * this.state.length_InputOption;\r\n            this.Volume = this.pi * this.l * (this.R - this.r) * (this.R + this.r);\r\n            this.MOne = this.Volume * this.state.density / 1000;\r\n            this.M = this.MOne * this.state.quontity_InputValue;\r\n            // scaling to output units\r\n            this.MOneScaled = this.state.massaOneOutputScale * this.MOne;\r\n            this.MScaled = this.state.massaOutputScale * this.M;\r\n\r\n        } else if (this.state.calculator_option === 1) {\r\n            // По массе\r\n            this.M = this.state.massa_InputValue / this.state.massa_InputOption\r\n            this.Volume = this.M / this.state.density * 1000\r\n            this.l = this.Volume / this.pi / (this.R - this.r) / (this.R + this.r)\r\n            this.l_average = this.l / this.state.quontity_InputValue\r\n            // scaling to output units\r\n            this.l_Scaled = this.l / this.state.l_OutputScale;\r\n            this.l_average_Scaled = this.l_average / this.state.l_average_OutputScale ;\r\n        }\r\n\r\n        this.price = this.state.price_InputValue / this.state.price_InputOption * this.M;\r\n        if (this.state.isNDS) {\r\n            this.price = this.price / 0.8;\r\n        }\r\n        const new_data = {\r\n            D: D,\r\n            T: T,\r\n            massa: this.M, \r\n            massaOne: this.M / this.state.quontity_InputValue, \r\n            price: this.price,\r\n            massaOneScaled: this.MOneScaled || 0,\r\n            massaScaled: this.MScaled || 0,\r\n            l: this.l,\r\n            l_average: this.l / this.state.quontity_InputValue,\r\n            l_Scaled: this.l_Scaled || 0,\r\n            l_average_Scaled:  this.l_average_Scaled || 0,\r\n            display_name: `${this.state.name} ${this.state.D_Input * this.state.D_Scale}x${this.state.T_Input * this.state.T_Option}`\r\n        }\r\n        this.setState(new_data,()=>{this.setValues(this.state)});\r\n    }\r\n\r\n    MainInputs()\r\n    {\r\n        return (\r\n            <this.InputsGroups\r\n                inputs = {this.inputs}\r\n            ></this.InputsGroups>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default PipeCalculator;","import balk_calculator_img from '../../../img/calculators/balk.png'\r\nimport CalculatorParent from './CalculatorParent';\r\nimport balk_types from \"./balk_types/balk_types.json\"\r\nimport Select from 'react-select';\r\n\r\n// Нужен для того чтобы убирать баг со стиялми в селект\r\nconst customStylesSelect = {\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      color: state.isSelected ? 'black' : 'black', // Цвет текста (выбран/не выбран)\r\n      backgroundColor: state.isSelected ? 'white' : 'white', // Фон опции\r\n      '&:hover': {\r\n        backgroundColor: '#dff4fb', // Фон при наведении\r\n      },\r\n    }),\r\n    control: (provided) => ({\r\n      ...provided,\r\n      border: '1px solid #ccc', // Рамка селекта\r\n      width: '250px', // Фиксированная ширина\r\n      minWidth: '250px', // Минимальная ширина\r\n      maxWidth: '100%', // Максимальная ширина (адаптив)\r\n    }),\r\n  };\r\n  // Настройка для селекта с выбором типа балки\r\n  const customStylesSelectWidthHead = {\r\n    control: (provided) => ({\r\n        ...provided,\r\n        minWidth: '250px', // Минимальная ширина\r\n        maxWidth: '250px'\r\n      }),\r\n  }\r\n\r\nclass BalkCalculator extends CalculatorParent {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.img = balk_calculator_img;\r\n        this.alt = 'Balk Calculator';\r\n\r\n        this.options = props.options;\r\n\r\n        this.state = { ...props.values };\r\n        this.UpdateInput = this.UpdateInput.bind(this);\r\n        this.updateType = this.updateType.bind(this);\r\n        this.MainInputs = this.MainInputs.bind(this);\r\n        this.TypeInputs = this.TypeInputs.bind(this);\r\n\r\n        this.types_keys = Object.keys(balk_types).map(key => ({\r\n            label: key,    // То, что показывается в select\r\n            value: key     // То, что будет в значении\r\n          }));\r\n        \r\n        if (this.state.balk_type) {\r\n            this.default_type = {\r\n                label: this.state.balk_type,\r\n                value: this.state.balk_type\r\n            }\r\n        } else {\r\n            this.default_type = {\r\n                label: \"10Б1\",\r\n                value: \"10Б1\"\r\n            }\r\n        }\r\n        \r\n        this.balk_types = balk_types\r\n\r\n        this.inputs = [\r\n            {\r\n                title: \"Высота (A)\",\r\n                placeholder: 'Введите высоту',\r\n                changeInput: (event) => {this.setState({A_Input: event.target.value}, this.UpdateInput)},\r\n                changeOption: (event) => {this.setState({A_Scale: event.target.value}, this.UpdateInput)},\r\n                unions: this.lengthUnions,\r\n                default_value: this.state.A_Input,\r\n                default_option: this.state.A_Scale\r\n            },\r\n            {\r\n                title: \"Ширина (B)\",\r\n                placeholder: 'Введите ширину',\r\n                changeInput: (event) => {this.setState({B_Input: event.target.value}, this.UpdateInput)},\r\n                changeOption: (event) => {this.setState({B_Scale: event.target.value}, this.UpdateInput)},\r\n                unions: this.lengthUnions,\r\n                default_value: this.state.B_Input,\r\n                default_option: this.state.B_Scale\r\n            },\r\n            {\r\n                title: \"Толщина (T)\",\r\n                placeholder: 'Введите толщину',\r\n                changeInput: (event) => {this.setState({T_Input: event.target.value}, this.UpdateInput)},\r\n                changeOption: (event) => {this.setState({T_Scale: event.target.value}, this.UpdateInput)},\r\n                unions: this.lengthUnions,\r\n                default_value: this.state.T_Input,\r\n                default_option: this.state.T_Scale\r\n            },\r\n            {\r\n                title: \"Толщина (S)\",\r\n                placeholder: 'Введите толщину',\r\n                changeInput: (event) => {this.setState({S_Input: event.target.value}, this.UpdateInput)},\r\n                changeOption: (event) => {this.setState({S_Scale: event.target.value}, this.UpdateInput)},\r\n                unions: this.lengthUnions,\r\n                default_value: this.state.S_Input,\r\n                default_option: this.state.S_Scale\r\n            },\r\n        ]\r\n    };\r\n    componentDidMount(){\r\n        !this.state.balk_type && this.updateType(this.default_type);\r\n        if (this.options === \"type\") this.setState({ needsHiddenMenu: false })\r\n    }\r\n    UpdateInput() {\r\n        const {\r\n            A_Input,\r\n            A_Scale,\r\n            B_Input,\r\n            B_Scale,\r\n            T_Input,\r\n            T_Scale,\r\n            S_Input,\r\n            S_Scale,\r\n            calculator_option,\r\n            length_InputValue,\r\n            length_InputOption,\r\n            gost_option,\r\n            density,\r\n            quontity_InputValue,\r\n            massaOneOutputScale,\r\n            massaOutputScale,\r\n            massa_InputValue,\r\n            massa_InputOption,\r\n            \r\n            price_InputValue,\r\n            price_InputOption,\r\n            isNDS,\r\n\r\n            l_OutputScale,\r\n            l_average_OutputScale\r\n        } = this.state;\r\n\r\n        let A, B, T, S, Square, Volume;\r\n        let M, MOne, MScaled, MOneScaled;\r\n        let l, l_average, l_Scaled, l_average_Scaled;\r\n        let price;\r\n\r\n        if (this.options === \"free\"){\r\n            \r\n            // Если работаем по произвольной балке, забираем параметры\r\n            A = A_Input * A_Scale\r\n            B = B_Input * B_Scale\r\n            T = T_Input * T_Scale\r\n            S = S_Input * S_Scale\r\n\r\n            Square = (2 * B * S) + (A * T) - (2 * T * S)\r\n        }\r\n        if (calculator_option === 0)\r\n        {\r\n            // По длине\r\n            l = length_InputValue * length_InputOption;\r\n            if (this.options === \"type\") {\r\n                // Работаем через тип и гоост\r\n                MOne = gost_option.value * l;\r\n            } else {\r\n                // Работаем через плотность\r\n                Volume = Square * l;\r\n                MOne = Volume * density / 1000;\r\n            };\r\n            M = MOne * quontity_InputValue;\r\n            // scaling to output units\r\n            MOneScaled = massaOneOutputScale * MOne;\r\n            MScaled = massaOutputScale * M;\r\n\r\n        } \r\n        else if (calculator_option === 1) \r\n        {\r\n            // По массе\r\n            M = massa_InputValue / massa_InputOption\r\n            if (this.options === \"type\"){\r\n                // Работаем через тип и гост\r\n                l = M / gost_option.value;\r\n            } else {\r\n                // Работаем через плотность\r\n                Volume = M / density * 1000\r\n                l = Volume / Square\r\n            }\r\n            \r\n            l_average = l / quontity_InputValue\r\n            // scaling to output units\r\n            l_Scaled = l / l_OutputScale;\r\n            l_average_Scaled = l_average / l_average_OutputScale ;\r\n        }\r\n\r\n        price = price_InputValue * price_InputOption * M;\r\n        if (isNDS) {\r\n            price = price / 0.8;\r\n        }\r\n\r\n        let display_name = `${this.state.name} `;\r\n        if (this.options === \"free\")\r\n        {\r\n            display_name += `${A}x${B}x${T}x${S}`\r\n        } else if (this.options === \"type\")\r\n        {\r\n            display_name += `${this.state.balk_type} ${this.state.gost_option.label}`\r\n        }\r\n        const new_values = {\r\n            massa: M, \r\n            massaOne: M / quontity_InputValue, \r\n            price: price,\r\n            massaOneScaled: MOneScaled || 0,\r\n            massaScaled: MScaled || 0,\r\n            l: l,\r\n            l_average: l / quontity_InputValue,\r\n            l_Scaled: l_Scaled || 0,\r\n            l_average_Scaled:  l_average_Scaled || 0,\r\n            display_name: display_name\r\n        }\r\n        this.setState(new_values, ()=>{this.setValues(this.state)});\r\n    }\r\n    \r\n    \r\n    \r\n    updateType(option){\r\n        var gost_options = balk_types[option.value];\r\n        var gost_option = gost_options && gost_options.length > 0 && gost_options[0];\r\n        \r\n        this.setState(\r\n            {\r\n                balk_type: option.value,\r\n                gost_options: gost_options,\r\n                gost_option: gost_option\r\n            },\r\n            this.UpdateInput\r\n        )\r\n    }\r\n\r\n    TypeInputs()\r\n    {\r\n        return (\r\n            <div>\r\n                <div className='CalculatorParameter'>\r\n                        <p>Тип балки:</p>\r\n                        <Select \r\n                            options={this.types_keys}\r\n                            onChange={this.updateType}\r\n                            placeholder=\"Выберите тип\"\r\n                            defaultValue={this.default_type}\r\n                            styles={customStylesSelectWidthHead}\r\n                        ></Select>\r\n                </div>\r\n                <div className='CalculatorParameter'>\r\n                    <p>ГОСТ:</p>\r\n                    <Select \r\n                        placeholder=\"Выберите ГОСТ\"\r\n                        \r\n                        onChange={option => this.setState({gost_option: option}, this.UpdateInput)}\r\n                        options={this.state.balk_type ? balk_types[this.state.balk_type] : []}\r\n                        styles={customStylesSelect}\r\n                        value={[this.state.gost_option]}\r\n                    ></Select>\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n\r\n    MainInputs()\r\n    {\r\n        if (this.options === \"type\")\r\n        {\r\n            return <this.TypeInputs></this.TypeInputs>;\r\n        } \r\n        else if (this.options === \"free\")\r\n        {\r\n            return (\r\n                <this.InputsGroups\r\n                    inputs = {this.inputs}\r\n                ></this.InputsGroups>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default BalkCalculator;","import sheet_calculator_img from '../../../img/calculators/sheet.png'\r\nimport CalculatorParent from './CalculatorParent';\r\n\r\n\r\n\r\nclass SheetCalculator extends CalculatorParent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.img = sheet_calculator_img;\r\n        this.alt = 'Sheet Calculator';\r\n\r\n        this.state = {\r\n            ...props.values\r\n        }\r\n        this.UpdateInput = this.UpdateInput.bind(this);\r\n        this.MainInputs = this.MainInputs.bind(this);\r\n\r\n        this.inputs = [\r\n            {\r\n                title: \"Высота (A)\",\r\n                placeholder: 'Введите высоту',\r\n                changeInput: (event) => {this.setState({A_Input: event.target.value}, this.UpdateInput)},\r\n                changeOption: (event) => {this.setState({A_Scale: event.target.value}, this.UpdateInput)},\r\n                unions: this.lengthUnions,\r\n                default_value: this.state.A_Input,\r\n                default_option: this.state.A_Scale\r\n            },\r\n            {\r\n                title: \"Высота (B)\",\r\n                placeholder: 'Введите высоту',\r\n                changeInput: (event) => {this.setState({B_Input: event.target.value}, this.UpdateInput)},\r\n                changeOption: (event) => {this.setState({B_Scale: event.target.value}, this.UpdateInput)},\r\n                unions: this.lengthUnions,\r\n                default_value: this.state.B_Input,\r\n                default_option: this.state.B_Scale\r\n            },\r\n        ]\r\n    };\r\n    UpdateInput() {\r\n        this.A = this.state.A_Input * this.state.A_Scale\r\n        this.B = this.state.B_Input * this.state.B_Scale\r\n\r\n        this.Square = this.A * this.B\r\n\r\n        if (this.state.calculator_option === 0){\r\n            // По длине\r\n            this.l = this.state.length_InputValue * this.state.length_InputOption;\r\n            this.Volume = this.Square * this.l\r\n            this.MOne = this.Volume * this.state.density / 1000;\r\n            this.M = this.MOne * this.state.quontity_InputValue;\r\n            // scaling to output units\r\n            this.MOneScaled = this.state.massaOneOutputScale * this.MOne;\r\n            this.MScaled = this.state.massaOutputScale * this.M;\r\n\r\n        } else if (this.state.calculator_option === 1) {\r\n            // По массе\r\n            this.M = this.state.massa_InputValue / this.state.massa_InputOption\r\n            this.Volume = this.M / this.state.density * 1000\r\n            this.l = this.Volume / this.Square\r\n            this.l_average = this.l / this.state.quontity_InputValue\r\n            // scaling to output units\r\n            this.l_Scaled = this.l / this.state.l_OutputScale;\r\n            this.l_average_Scaled = this.l_average / this.state.l_average_OutputScale;\r\n        }\r\n\r\n        this.price = this.state.price_InputValue * this.state.price_InputOption * this.M;\r\n        if (this.state.isNDS) {\r\n            this.price = this.price / 0.8;\r\n        }\r\n        const new_values = {\r\n            massa: this.M, \r\n            massaOne: this.M / this.state.quontity_InputValue, \r\n            price: this.price,\r\n            massaOneScaled: this.MOneScaled || 0,\r\n            massaScaled: this.MScaled || 0,\r\n            l: this.l,\r\n            l_average: this.l / this.state.quontity_InputValue,\r\n            l_Scaled: this.l_Scaled || 0,\r\n            l_average_Scaled:  this.l_average_Scaled || 0,\r\n            display_name: `${this.state.name} ${this.A}x${this.B}x${this.l}`\r\n        }\r\n        this.setState(new_values, ()=>{this.setValues(this.state)});\r\n    }\r\n    \r\n    MainInputs()\r\n    {\r\n        return (\r\n            <this.InputsGroups\r\n                inputs = {this.inputs}\r\n            ></this.InputsGroups>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SheetCalculator;","import React from \"react\";\r\n\r\nimport PipeCalculator from './Calculators/PipeCalculator';\r\nimport BalkCalculator from './Calculators/BalkCalculator';\r\nimport SheetCalculator from './Calculators/SheetCalculator';\r\n\r\nimport pipe_img from '../../img/pipe.png'\r\nimport list_img from '../../img/sheet.png'\r\nimport balk_img from '../../img/balk.png'\r\n\r\nimport PopUpMenu from \"../PopUpMenu\";\r\n\r\nimport metals from \"./Calculators/properties/MetalProperty\";\r\n\r\nconst images = {\r\n    pipe: pipe_img, \r\n    list: list_img, \r\n    balk: balk_img, \r\n  }\r\n\r\nconst default_values_main = {\r\n    calculator_option: 0,\r\n    \r\n    // Input option 0\r\n    length_InputValue: 0,\r\n    length_InputOption: 1,\r\n    // Input option 1\r\n    massa_InputValue: 0,\r\n    massa_InputOption: 1,\r\n\r\n    quontity_InputValue: 1,\r\n\r\n    isNDS: false,\r\n    price: 0,\r\n\r\n    // Output 1\r\n    massa: 0,\r\n    massaOne: 0,\r\n    mass_InputValue: 0,\r\n    mass_InputOption: 1,\r\n\r\n    massaScaled: 0,\r\n    massaOneScaled: 0,\r\n    massaOutputScale: 1,\r\n    massaOneOutputScale: 1,\r\n\r\n    // Output 2\r\n    l_OutputScale: 1,\r\n    l_average_OutputScale: 1,\r\n    l_average_Scaled: 0,\r\n    l_Scaled: 0,\r\n    l: 0,\r\n    l_average: 0,\r\n\r\n    price_InputValue: 0,\r\n    price_InputOption: 1,\r\n    density_option: metals[0],\r\n    density: metals[0].value,\r\n    material: metals[0].label,\r\n    note: \"\",\r\n    images: [],\r\n    needsHiddenMenu: true\r\n}\r\n\r\n\r\nclass CalculatorList extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            item: null,\r\n        }\r\n        this.items = [\r\n            {\r\n              image_url: images.pipe, \r\n              text: \"Труба\",\r\n              calculator: PipeCalculator,\r\n              default_values: {\r\n                ...default_values_main,\r\n                name: \"Труба\",\r\n                display_name: \"Труба\",\r\n                // Input\r\n                D_Input: 0,\r\n                D_Scale: 1,\r\n                T_Input: 0,\r\n                T_Option: 1\r\n              }\r\n            },\r\n            {\r\n              image_url: images.balk, \r\n              text: \"Балка\",\r\n              calculator: BalkCalculator,\r\n              variants: [\r\n                {\r\n                  label: \"По типу\",\r\n                  options: \"type\"\r\n                },\r\n                {\r\n                  label: \"Произвольно\",\r\n                  options: \"free\"\r\n                }\r\n              ],\r\n              default_values: {\r\n                ...default_values_main,\r\n                isOpenMenu: false,\r\n\r\n                name: \"Балка\",\r\n                display_name: \"Балка\",\r\n\r\n                // Input\r\n                A_Input: 0,\r\n                B_Input: 0,\r\n                T_Input: 0,\r\n                S_Input: 0,\r\n                // Input Scales\r\n                A_Scale: 1,\r\n                B_Scale: 1,\r\n                T_Scale: 1,\r\n                S_Scale: 1,\r\n\r\n                // Types and GOSTs\r\n                balk_type: \"\",\r\n                gost_option: null\r\n              }\r\n            },\r\n            {\r\n                image_url: images.list, \r\n                text: \"Лист\",\r\n                calculator: SheetCalculator,\r\n                default_values: {\r\n                    ...default_values_main,\r\n                    isOpenMenu: false,\r\n\r\n                    name: \"Лист\",\r\n                    display_name: \"Лист\",\r\n\r\n                    // Input\r\n                    A_Input: 0,\r\n                    B_Input: 0,\r\n\r\n                    // Input Scales\r\n                    A_Scale: 1,\r\n                    B_Scale: 1\r\n                }\r\n            },\r\n        ]\r\n        this.PopUpMenuBottom = this.PopUpMenuBottom.bind(this);\r\n        this.PopUpMenuVariants = this.PopUpMenuVariants.bind(this);\r\n\r\n        this.setCalculator = props.setCalculator;\r\n    }\r\n\r\n    clearItem = () => this.setState({item: null})\r\n\r\n    CalculatorMainButton(props) {\r\n        var onClick = props.onClick || null;\r\n        var img = props.img;\r\n        var text = props.text || \"\";\r\n        return (\r\n            <div className='block_button'\r\n                 onClick={onClick}\r\n            >\r\n                <img src={img} alt={text}></img>\r\n                <p>{text}</p>\r\n            </div>\r\n        )\r\n    }\r\n    PopUpMenuBottom() {\r\n        return (\r\n            <div>\r\n                <p>Выбран калькулятор:</p>\r\n                <this.CalculatorMainButton \r\n                    img={this.state.item.image_url}\r\n                    text={this.state.item.text}\r\n                ></this.CalculatorMainButton>\r\n            </div>\r\n        )\r\n    }\r\n    PopUpMenuVariants() {\r\n        const item = this.state.item;\r\n        return (\r\n            <div>\r\n            {\r\n                item.variants.map((variant, i) => (\r\n                    <div \r\n                        key={i} \r\n                        onClick={() => {\r\n                            this.setCalculator(item, variant.options);\r\n                            this.clearItem();\r\n                        }}\r\n                    >\r\n                        {variant.label}\r\n                    </div>\r\n                )\r\n            )}\r\n            </div>\r\n    )}\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.items.map((item, i) => {\r\n                        let onClickFun;\r\n                        if (item.variants && item.variants.length > 0) \r\n                        {\r\n                            onClickFun = () => this.setState( {item: item})\r\n                        }\r\n                        else \r\n                        {\r\n                            onClickFun = () => this.setCalculator(item, null);\r\n                        }\r\n\r\n                        return (\r\n                            <this.CalculatorMainButton\r\n                                key={i}\r\n                                onClick={onClickFun}\r\n                                img={item.image_url}\r\n                                text={item.text}\r\n                            ></this.CalculatorMainButton>\r\n                        )\r\n                    })\r\n                }\r\n                {this.props.children}\r\n                <PopUpMenu\r\n                    closeFun = {this.clearItem}\r\n                    bottom = {this.PopUpMenuBottom}\r\n                    trigger = { this.state.item && this.state.item.variants.length > 0 }\r\n                >\r\n                    <this.PopUpMenuVariants></this.PopUpMenuVariants>\r\n                </PopUpMenu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalculatorList;","import React from \"react\";\r\nimport './PopUpMenu.modul.css'\r\n\r\n\r\n\r\n\r\nexport default function PopUpMenu(props)\r\n{\r\n    const closeFun = props.closeFun;\r\n    const Bottom = props.bottom;\r\n    const column = props.column || false;\r\n    const classNames = 'PopUpMenuVariants' + (column ? \" column\" : \"\");\r\n    var trigger = props.trigger;\r\n    \r\n    \r\n\r\n    function close()\r\n    {\r\n        closeFun();\r\n    }\r\n\r\n    return (\r\n        trigger && (\r\n            <div>\r\n                <div className=\"PopUpMenuBG\">\r\n                    <div \r\n                        className='PopUpMenuCloseArea'\r\n                        onClick={close}\r\n                    ></div>\r\n                    <div className='PopUpMenu'>\r\n                        <div className=\"close_button\">\r\n                            <i className=\"fas fa-xmark\"\r\n                                onClick={close}\r\n                            ></i>\r\n                        </div>\r\n                        <div className={classNames}>\r\n                            {props.children}\r\n                        </div>\r\n                        <div className='PopUpMenuBottom'>\r\n                            {Bottom && <Bottom></Bottom>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    )\r\n}\r\n"],"names":["label","value","DynamicTextArea","setValue","useState","textAreaRef","useRef","useEffect","current","focus","_jsx","Input","TextArea","ref","onChange","e","target","autoSize","minRows","maxRows","placeholder","style","resize","beforeUpload","file","isJpgOrPng","type","message","error","isLt2M","size","_ref","initialPhotos","onPhotosChange","loading","setLoading","photos","setPhotos","uploadButton","_jsxs","border","background","children","LoadingOutlined","PlusOutlined","marginTop","Flex","vertical","gap","Upload","name","listType","className","showUploadList","action","info","status","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","originFileObj","url","newPhoto","uid","newPhotos","concat","wrap","map","photo","Card","hoverable","width","position","bodyStyle","padding","cover","Image","src","alt","height","objectFit","preview","Button","danger","icon","DeleteOutlined","top","right","zIndex","onClick","filter","handleRemove","CalculatorParent","React","constructor","props","super","this","metals","pi","lengthUnionsBig","title","scale","weightUnions","priceUnions","lengthUnions","setValues","null_arg","inputGroup","bind","hiddenMenu","changeNds","PriceNdsBlock","priceBlock","selectUnions","OutputLineWithUnions","OutputLinesWithUnions","MainResult","ResultLength","ResultMass","InputsGroups","CalculatorOption","CalculatorHead","MassAndLengthInput","QuontityAndPrice","updateCalculator","AdditionalInputs","handlesImages","setState","length_InputValue","length_InputOption","massa_InputValue","massa_InputOption","UpdateInput","unions","change","default_value","union","i","changeInput","changeOption","default_option","defaultValue","length","Output","price","parseFloat","toFixed","state","needsHiddenMenu","isOpenMenu","display","marginBottom","Select","options","density_option","option","density","material","bool","isNDS","signs","onChangeUnions","event","lines","line","massaOneScaled","massaOneOutputScale","massaScaled","massaOutputScale","l_average_Scaled","l_average_OutputScale","l_Scaled","l_OutputScale","calculator_option","number","text","update","isActive","inputs","input","quontity_InputValue","price_InputValue","price_InputOption","images","additional_inputs","App","render","MainInputs","_objectSpread","values","D_Input","D_Scale","T_Input","T_Scale","D","T","T_Option","R","r","l","Volume","MOne","M","MOneScaled","MScaled","l_average","new_data","massa","massaOne","display_name","customStylesSelect","provided","color","isSelected","backgroundColor","control","minWidth","maxWidth","customStylesSelectWidthHead","updateType","TypeInputs","types_keys","Object","keys","balk_types","key","balk_type","default_type","A_Input","A_Scale","B_Input","B_Scale","S_Input","S_Scale","componentDidMount","gost_option","A","B","S","Square","new_values","gost_options","styles","pipe","list","list_img","balk","default_values_main","mass_InputValue","mass_InputOption","note","CalculatorList","clearItem","item","items","image_url","calculator","PipeCalculator","default_values","BalkCalculator","variants","SheetCalculator","PopUpMenuBottom","PopUpMenuVariants","setCalculator","CalculatorMainButton","variant","onClickFun","PopUpMenu","closeFun","bottom","trigger","Bottom","classNames","column","close"],"sourceRoot":""}