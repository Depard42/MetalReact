{"version":3,"file":"static/js/6.61da72b0.chunk.js","mappings":"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","sources":["components/Calculate/LengthMap.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./LengthMap.modul.css\"\r\nimport PopUpMenu from \"../PopUpMenu\";\r\nimport CalculatorList from \"./CalculatorList\";\r\nimport axios from 'axios';\r\n\r\nclass LengthMap extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isPopUpOpen: true,\r\n            data: [],\r\n            edit_calculator: NaN,\r\n            edit_index: NaN,\r\n            choosen: false,\r\n        }\r\n        this.addCalculator = this.addCalculator.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.copyRow = this.copyRow.bind(this);\r\n        this.closeCurrentCalculator = this.closeCurrentCalculator.bind(this);\r\n        this.backbutton = this.backbutton.bind(this);\r\n        this.setValuesToCalculator = this.setValuesToCalculator.bind(this);\r\n        this.EditCalculatorWindow = this.EditCalculatorWindow.bind(this);\r\n        this.MainTable = this.MainTable.bind(this);\r\n        this.ResultsTable = this.ResultsTable.bind(this);\r\n        this.ControlPanel = this.ControlPanel.bind(this);\r\n        this.Buttons = this.Buttons.bind(this);\r\n        this.send_data = this.send_data.bind(this);\r\n    }\r\n\r\n    addCalculator(item, options)\r\n    {\r\n        this.setState({ isPopUpOpen: false });\r\n        const { data } = this.state;\r\n        const new_data = [...data, {item: item, options: options, values: { ...item.default_values }}]\r\n        this.setState({ data: new_data },\r\n            ()=>{\r\n                const i = this.state.data.length-1;\r\n                this.setState({ edit_calculator: this.state.data[i], edit_index: i })\r\n            }\r\n        );\r\n    }\r\n\r\n    deleteRow(index)\r\n    {\r\n        const { data } = this.state;\r\n        data.splice(index, 1);\r\n        this.setState({ data: data });\r\n    }\r\n    copyRow(index)\r\n    {\r\n        const { data } = this.state;\r\n        const new_data = [...data, {...data[index]}];\r\n        this.setState({ data: new_data, choosen: new_data.length-1 })\r\n    }\r\n    closeCurrentCalculator()\r\n    {\r\n        this.setState({ edit_calculator: NaN, edit_index: NaN });\r\n    }\r\n    backbutton()\r\n    {\r\n        return <div className='backbutton' onClick={this.closeCurrentCalculator}><i className=\"fas fa-arrow-left\"></i></div>\r\n    }\r\n    setValuesToCalculator(values)\r\n    {\r\n        console.log(values)\r\n        const { data } = this.state;\r\n        data[this.state.edit_index].values = values;\r\n        this.setState({ data: data });\r\n    }\r\n    send_data()\r\n    {\r\n        let formData = {\r\n            pipes: [],\r\n            lists: [],\r\n            balks: []\r\n        }\r\n        this.state.data.forEach((row)=>{\r\n            if (row.values.name === \"Труба\")\r\n            {\r\n                formData.pipes.push(row.values)\r\n            }\r\n            else if (row.values.name === \"Балка\" )\r\n            {\r\n                formData.balks.push(row.values)\r\n            }\r\n            else if (row.values.name === \"Лист\" )\r\n            {\r\n                formData.lists.push(row.values)\r\n            }\r\n        })\r\n        console.log(formData)\r\n        try {\r\n            const response = axios.post('http://127.0.0.1:8000/api/add_order', formData);\r\n            console.log('Успешно:', response.data);\r\n        } catch (error) {\r\n            console.error('Ошибка:', error);\r\n        }\r\n    }\r\n\r\n    EditCalculatorWindow()\r\n    {\r\n        const { edit_calculator } = this.state;\r\n        return (\r\n            <div>\r\n                <this.backbutton></this.backbutton>\r\n                <edit_calculator.item.calculator\r\n                    options={edit_calculator.options}\r\n                    values={edit_calculator.values}\r\n                    setValues={this.setValuesToCalculator}\r\n                    additional_inputs={true}\r\n                >\r\n                </edit_calculator.item.calculator>\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n\r\n    MainTable()\r\n    {\r\n        const { data } = this.state;\r\n        return (\r\n            <div className=\"table-container\">\r\n                <table>\r\n                    <thead className=\"fixed\">\r\n                        <tr>\r\n                            <th>№</th>\r\n                            <th>Позиция</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data.map((row, i) => {\r\n                                return (\r\n                                    <tr key={i}\r\n                                        style={{\r\n                                            backgroundColor: this.state.choosen === i ? \"#ff6968\" : \"\",\r\n                                            color: this.state.choosen === i ? \"white\" : \"black\",\r\n                                        }}\r\n                                        onClick={()=>{this.setState({choosen: i})}}\r\n                                    >\r\n                                        <th>{i+1}</th>\r\n                                        <th>{row.values.display_name}</th>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                        \r\n                    </tbody>\r\n                    \r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    ResultsTable()\r\n    {\r\n        const { data } = this.state;\r\n        return (\r\n            <table className=\"result\">\r\n                <thead\r\n                    style={{ backgroundColor: \"#ff8f6166\"}}\r\n                >\r\n                        <tr>\r\n                            <th>Масса (кг)</th>\r\n                            <th>Длина (м)</th>\r\n                            <th>Цена (₽)</th>\r\n                        </tr>\r\n                    </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>{parseFloat(data.reduce(function(s, row) {return s + row.values.massa;}, 0).toFixed(4))}</th>\r\n                        <th>{parseFloat(data.reduce(function(s, row) {return s + row.values.l;}, 0).toFixed(4))}</th>\r\n                        <th>{parseFloat(data.reduce(function(s, row) {return s + row.values.price;}, 0).toFixed(2))}</th>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    ControlPanel()\r\n    {\r\n        const { data } = this.state;\r\n        if (this.state.choosen !== false)\r\n            return (\r\n                <div className=\"control_panel\">\r\n                    <i className=\"fas fa-edit\"\r\n                        onClick={()=>{ this.setState({ edit_calculator: data[this.state.choosen], edit_index: this.state.choosen }) }}\r\n                    ></i>\r\n                    <i className=\"fa-regular fa-copy\"\r\n                        onClick={()=>{ this.copyRow(this.state.choosen)}}\r\n                    ></i>\r\n                    <i className=\"fas fa-trash\" \r\n                        onClick={()=>{ this.deleteRow(this.state.choosen); this.setState({ choosen: false }) }}\r\n                    ></i>\r\n                </div>\r\n            )\r\n    }\r\n\r\n    Buttons()\r\n    {\r\n        return (\r\n            <div className=\"Buttons\">    \r\n                <div\r\n                    onClick={this.send_data}\r\n                    style={{ backgroundColor: \"#7b55ff\" }}\r\n                >\r\n                    <p>Сохранить</p>\r\n                </div>\r\n                <div\r\n                    onClick={()=>{this.setState({ isPopUpOpen: true })}}\r\n                    style={{ backgroundColor: \"#09749e\" }}\r\n                >\r\n                    <p>Добавить</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { edit_calculator } = this.state;\r\n\r\n        if (edit_calculator)\r\n        {\r\n            return <this.EditCalculatorWindow></this.EditCalculatorWindow>;\r\n        }\r\n        else\r\n        {\r\n            return (\r\n                <div>\r\n                    <div className=\"LengthMap\">\r\n                        <h2>Карта Длин</h2>\r\n                        <div className=\"main\">\r\n                            <this.MainTable></this.MainTable>\r\n                            <this.ResultsTable></this.ResultsTable>\r\n                        </div>\r\n                        <this.ControlPanel></this.ControlPanel>\r\n                        <this.Buttons></this.Buttons>\r\n                    </div>\r\n                    \r\n                    <PopUpMenu\r\n                        closeFun = {() => {this.setState({ isPopUpOpen: false })}}\r\n                        trigger = {this.state.isPopUpOpen}\r\n                        column={true}\r\n                    >\r\n                        <CalculatorList\r\n                            setCalculator = { this.addCalculator }\r\n                        ></CalculatorList>\r\n                    </PopUpMenu>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default LengthMap;"],"names":["LengthMap","React","constructor","props","super","this","state","isPopUpOpen","data","edit_calculator","NaN","edit_index","choosen","addCalculator","bind","deleteRow","copyRow","closeCurrentCalculator","backbutton","setValuesToCalculator","EditCalculatorWindow","MainTable","ResultsTable","ControlPanel","Buttons","send_data","item","options","setState","new_data","values","_objectSpread","default_values","i","length","index","splice","_jsx","className","onClick","children","console","log","formData","pipes","lists","balks","forEach","row","name","push","response","axios","post","error","_jsxs","calculator","setValues","additional_inputs","map","style","backgroundColor","color","display_name","parseFloat","reduce","s","massa","toFixed","l","price","render","PopUpMenu","closeFun","trigger","column","CalculatorList","setCalculator"],"sourceRoot":""}